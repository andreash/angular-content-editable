angular.module("angular-content-editable",[]),angular.module("angular-content-editable").directive("contentEditable",["$log","$sce","$parse","$window","contentEditable",function($log,$sce,$parse,$window,contentEditable){function _link(scope,elem,attrs,ngModel){function onClick(e){return e.preventDefault(),e.ctrlKey&&e.stopPropagation(),attrs.$set("contenteditable","true"),originalElement.focus()}function onFocus(e){if(noEscape=!0,options.focusSelect){var range=$window.document.createRange(),selection=$window.getSelection();range.selectNodeContents(originalElement),selection.removeAllRanges(),selection.addRange(range)}if(options.renderHtml&&(originalElement.textContent=elem.html()),scope.focusCallback&&angular.isFunction(scope.focusCallback))return scope.$apply(scope.focusCallback(elem.html(),elem))}function onBlur(e){var html;if(attrs.$set("contenteditable","false"),options.renderHtml&&noEscape?(html=originalElement.textContent.replace(/\u00a0/g," "),elem.html(html)):html=elem.html().replace(/&nbsp;/g," "),html!=ngModel.$modelValue&&(ngModel.$setViewValue(html),scope.editCallback&&angular.isFunction(scope.editCallback)))return scope.$apply(scope.editCallback(html,elem))}function onKeyDown(e){var keys_checked=!1;if(scope.keyDownCallback&&angular.isFunction(scope.keyDownCallback)&&(keys_checked=scope.$apply(scope.keyDownCallback(e,elem,getCaretPosition(elem)))),!keys_checked){if(9===e.which)return void originalElement.blur();if(27===e.which)return ngModel.$rollbackViewValue(),noEscape=!1,originalElement.blur();if(13===e.which&&(options.singleLine||e.ctrlKey))return originalElement.blur()}}if(!ngModel)return void $log.warn("Error: ngModel is required in elem: ",elem);var noEscape=!0,originalElement=elem[0],options=angular.copy(contentEditable);angular.forEach(options,function(val,key){key in attrs&&(options[key]=$parse(attrs[key])(scope))}),attrs.$addClass(options.editableClass),ngModel.$render=function(){elem.html(ngModel.$modelValue||elem.html())},elem.on("click",onClick),elem.on("focus",onFocus),elem.on("blur",onBlur),elem.on("keydown",onKeyDown),scope.$on("$destroy",function(){elem.off("click",onClick),elem.off("focus",onFocus),elem.off("blur",onBlur),elem.off("keydown",onKeyDown)})}function getCaretPosition(editable){var sel,range,caretPos=0;return sel=window.getSelection(),sel.rangeCount&&(range=sel.getRangeAt(0),range.commonAncestorContainer.parentNode===editable[0]&&(caretPos=range.endOffset)),caretPos}return{restrict:"A",require:"ngModel",scope:{editCallback:"=",focusCallback:"=",keyDownCallback:"="},link:_link}}]),angular.module("angular-content-editable").provider("contentEditable",function(){var defaults={editableClass:"editable",keyBindings:!0,singleLine:!1,focusSelect:!0,renderHtml:!1,editCallback:!1};this.configure=function(options){return angular.extend(defaults,options)},this.$get=function(){return defaults}});